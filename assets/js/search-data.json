{
  
    
        "post0": {
            "title": "Tools Check",
            "content": "",
            "url": "https://stg-7.github.io/FastPagesSTG/2022/11/18/ToolsCheck.html",
            "relUrl": "/2022/11/18/ToolsCheck.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "NATM Blogging",
            "content": "Other Group’s Projects . NBA Stats Site: . NBA database of teams and their best players. API usage shown in stored stats. Also, there is a search bar to search a desired team. . TeamBerries: . Dictionary that uses API to get words and definitons. Survey present to get user feedback on website. Word of the day shown. Randomized. . Alan, Steven, Ederick, Noor, Liav: . Calendar that takes date and weather. Can check weather in other areas as well. Search bar to search cities. . Paraas, Samarth, AJ, Haoxuan: . Motivational quote app that shows motivational quotes under different categories. Using API to pull the assigned quote list and there is a voting counter as well, similar to that of mort’s jokes API. . Team Peacock-Justin, James, Shruti and Joslyn: . API that pulls city names inputted by user and gives relevant info. Also there is a broken tetris game. . Fitness Forever-Advay, Krishiv, Dhruva, and Shivansh: . API gives motivational workout quotes. Also has a calorie calculator, along with workout tracking?? Fitness goals recorder and BMI calculator as well. . Swag Math Games-Aiden, Dash, Sabime, Ahad: . Pokemon guessing game, tetris, cookie clicker, and blackjack. APIs to track info for all of them. Extensive use of GET protocol and connecting apis. . Lyntax-Lucas, Aniket, Soham, Ryan . Hangman game that has the API usage with words and definitions. Backend has dictionary with words and definitions that randomize each game. . N Marketplace: . Del Norte students can buy and sell things. API usage with storing user sale stuff, also input for item, price, and user info. . TeamCheese: . Quiz project with many different projects. API usage in the quiz content, however it’s janky and not well designed. . Final Reflection . At NatM, we saw different projects with different skill levels. An interesting point I’ve noticed is that the CSA project isn’t far off from his CSP project. If anything, it was the little things that separated the two, such as the cool hover animation. .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%2012/2022/11/10/NATMBlogging.html",
            "relUrl": "/week%2012/2022/11/10/NATMBlogging.html",
            "date": " • Nov 10, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Final College Board MC Blogging",
            "content": "Test Score . . Test Corrections: . Question 35: . Documentation for procedure with a loop: In the following procedure, the parameter max is a positive integer. . PROCEDURE printNums(max) { count ← 1 REPEAT UNTIL(count &gt; max) { DISPLAY(count) count ← count + 2 } } . Which of the following is the most appropriate documentation to appear with the printNums procedure? . Correct answer: B, Prints all positive odd integers that are less than or equal to max. The loop terminates when count exceeds max, so only values less than or equal to max are printed. . Question 17: . Purpose of Internet protocols: Which of the following is a primary reason for the use of open protocols on the Internet? . Correct answer: D, Open protocols provide a way to standardize data transmission between different devices. Protocols are agreed-upon sets of rules that specify the behavior of a system. Protocols used on the Internet enable devices from different manufacturers to communicate in a standard way. . Question 43: . Value of x after REPEAT UNTIL block: Consider the following code segment. . x ← 0 result ← 0 REPEAT UNTIL x is greater than 5 result ← result plus x x ← x plus 1 . What is the value of result after the code segment is executed? . Correct answer: C, The variables x and result are initialized to 0. Inside the loop, result is increased by x and x is increased by 1. The loop terminates when x exceeds 5. Therefore, result is assigned the sum of the integers from 0 to 5, or 15. . Question 45: . Values of counts after traversing theList: Consider the following code segment. . theList ← [-2, -1, 0, 1, 2] count1 ← 0 count2 ← 0 FOR EACH value IN theList { IF(value &gt; 0) { count1 ← count1 + 1 } ELSE { count2 ← count2 + 1 } } . What are the values of count1 and count2 as a result of executing the code segment? . Correct answer: B, The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. The list contains two positive values, so count1 is 2 and count2 is 3. . Final Reflection: . Overall, the assessment went very well. Since the last quiz, you have a better understanding of the Collegeboard pseudocode. However, there are still gaps in my understanding. For one thing, I had to guess most questions about Bits and communicate with a group of members who hadn’t completed their assessment at the time of the collaboration to understand the concepts involved. One of the key things I learned was how the sensor pulls at multiple intervals per second of her measured in Hz. .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%2012/2022/11/10/FinalCollegeBoardMCBlogging.html",
            "relUrl": "/week%2012/2022/11/10/FinalCollegeBoardMCBlogging.html",
            "date": " • Nov 10, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Script for First Check Video",
            "content": "Program Purpose . An online single-player minesweeper game that can be played anywhere, anytime | Users could choose to store data such as high scores (minimum number of moves or time) if they wish. | . Program Function . Function is similar to that of a minesweeper game Minesweeper | . Order: . User will click on a coordinate in the “game grid” | If the coordinate is a “safe square”, then it and the surrounding “safe squares” will also be “flagged”: | If the coordinate is a mine, then the game ends, revealing all of the mines | Top score will be saved using python lists |",
            "url": "https://stg-7.github.io/FastPagesSTG/week%209/2022/10/18/FirstPrez.html",
            "relUrl": "/week%209/2022/10/18/FirstPrez.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Extra Credit from 10/17 Qualcomm Career Series",
            "content": "Notes/Summary . This event was presented by Nisha Sethia, Director of Engineering, and Sumalatha Arugolana, Staff Engineering from Qualcomm . . Why Engineering is important (Speaker 1) . Engineering can be used in many fields of study, and the concepts of engineering can be used to solve problems that make a positive impact in the world | Engineering follows a logical thought process | Engineering is useful to society in more ways than one | . Different Streams of Engineering (Speaker 1) . Electronics | Robotics | Communication | Aeronautics | Industrial | Computer Science | Mechanical | Structural | Civil Engineering | Electronics | . Additional information about speaker: . Speaker took communication engineering for her stream and also focused on computer science and electronics. After the speaker graduated, she went to a job relating communication engineering and computer engineering (ARozn aand Qualcom). . What is QUALCOMM currently doing (Speaker 1) . QUALCOMM makes a lot of the mobile technology and is currently working on 5G data service | QUALCOMM makes chips and wireless technology | QUALCOMM creates services related to networking and wireless technology | . Additional information about speaker: . Speaker Worked on IOT Technollogies, and multiple different products. . . Backround Information about Speaker 2 (Speaker 2) . She Chose Engineering mainly because: her father was also in the same field | she was very good at math | . | In engineering she chose computers stream because she felt unique doing so | She spent 4 years of engineering college dreaming about becoming a hardware engineer designer but in the end became a software engineer | Landed 1st job in a computer science company where she Wwrked on 3d Engineering and then started working as a software engineer | Worked in the headquarters of the company and joined Qualcoom and worked in the 4th generation project. Right now working in the 5th generation project at Qualcoomn. | . Questions and Answers (Speaker 2) . Q: How to know what side of engineering you want to pursue? (software, hardware, etc) . A: Keep a growth mindset, start with knowing interest and love. It may feel hard to know exactly what you want to do, and get exposure in different fields and career paths. . Q: What universities specialize in software engineering? In those universities, what are the majors that would help me learn the necessary skills and concepts to get a software developer job in tech app companies (Google, Amazon, Apple, Qualcomm)? . A: Some of the top colleges for software engineering: . University of California, San Diego. | Massachusetts Institute of Technology. | Stanford University. | University of California, Berkeley. | University of Illinois Urbana-Champaign. | Georgia Institute of Technology. | . A major in computer science would be the best fit in order to learn the necessary skills to get a software developer job in major tech companies such as google, amnazon, apple, and qualcomm. . . Q: What should I do in high school to increase my chances to get admitted into the top colleges listed above? . A: Working in virtual reality company which is associated with google, all this stuff is also part of hardware. A lot of companies gave a combination of software and hardware engineers. Taking a lot of AP courses and making sure that GPA is very high. Also joining courses and robotics to show interest in engineering. Take advantage of any programs which can help you for engineering. . Final Paragraph (Personal Takeaways) . From this zoom meeting, I learned a lot about what engineering and computer science looks like through the perspective of speakers that work at QUALCOMM. Specifically, I learned what is worked on in QUALCOMM, the main things being mobile technology, wireless technology, and networking. Furthermore, I gained understanding of the uses of engineering as well as it’s applications worldwide. I can now see how engineering is used in everything, through a simple program such as setting an alarm to more complicated functions such as launching a rocket. Engineering and computer science is used almost everywhere in the world and it is almost impossible to find something that does not use a program or function in anyway. Also, through the tips of the speakers I was able to understand what direction I can head to help me become a succesful software developer in the future, specifically working in major IT companies such as Google and QUALCOMM. This new direciton motivates me to work harder in the STEM field, furhter exploring my capabilities and challenging myself by taking difficult courses and participating in extracurricular activities that align with STEM. . .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%208/2022/10/17/ExtraCredit1017.html",
            "relUrl": "/week%208/2022/10/17/ExtraCredit1017.html",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Notes from College Board 1.4",
            "content": "| 1.1 Collaboration | 1.2 Program Function and Purpose | 1.3 Program Design and Development | 1.4 Identifying and Correcting Errors | . Notes from College Board 1.4 . Common Errors: To start, it’s important to note that no one is perfect. Errors are bound to happen but identifying, understanding, and fixing thoses errors is what matters more. There are 4 main types of errors when developing a program; Logic, Syntax, Run-time, and Overflow errors. . Logic errors are errors that are caused due to the programmer making a mistake in the algorithm. This causes the program to behave unexpectedly. A logic error can result in events in the program taking place in times that they are not suppose to happen in. . Syntax errors are very small mistakes made by the programmer that doesn’t match with the language. It could be a typo, unnecessary code, missing necessary code, missing characters or added characters. Characters include colon, semicolon, parenthesis, indentations, quotes, and so much more. These mistakes will cause the program to shut down. . Run-time errors happen when a program stops while it is running. This event is also known as “crashing” and the error is normally referred to as a “bug”. A run-time error can be caused by dividing by zero, wrong inputed data type, or many other errors that are commonly caused by incorrect data. . Over-flow errors occur in a program when it is required to perform a calculation that is not possible for it to run. The values in the calculations are outside the set range of values of the program. This is caused due to memory allocation constraints of the program’s language, resulting in restrictions. . Methods to Correct Errors: IDEs: Syntax errors are the easiest errors to fix because most IDEs display information on where and when there is a syntax error. . Test Cases: Unlike syntax errors, logic errors are more difficult to found because the IDEs doesn’t help you and it would normally look like nothing is wrong. This is when programmers use test cases. Test cases are a set of actions(like inputs) that are used to check if they get the correct result. . Hand Tracing: Another testing strategy is hand tracing. Hand tracing is putting in values of variables in a loop to find out if the outcome is correct. This is most useful with loops and other small code segments that repeat a number of times. . Extra Outputs: Lastly, a programmer could just add extra outputs. This strategy is used so that the programmer could find where the error is in the program. When the error is fixed, the extra output is normally removed. .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/11/CB4.html",
            "relUrl": "/week%207/2022/10/11/CB4.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Notes from College Board 1.3",
            "content": "| 1.1 Collaboration | 1.2 Program Function and Purpose | 1.3 Program Design and Development | 1.4 Identifying and Correcting Errors | . Notes from College Board 1.3 . There are multiple steps within the development process. The following phrases are commonly used when developing a program. Research, Designing, Prototyping, Testing, followed by revisions. Revisions are a key part of this process and will happen several times. This developmental process is iterative and requires refinement and revision based on testing and feedback. This may require revisiting earlier phrases of the process. Investigation is useful in development for understanding and identifying the program constraints, as well as the requirements of the people who will use the program. Investigation can be perfomed by collecting user data, having beta testing, interviews, and direct observations. . Learning Objectives CRD - 2.E - Develop a program using a development process. CRD - 2.F - Design a program and its user interface CRD - 2.E.1 - A development process can be ordered and intentional, or exploratory in nature. CRD - 2.E.2 - There are multiple development processes. The following phases are commonly used when developing a program: . Investigating and reflecting Designing Prototyping Testing CRD - 2.E.3 - A development process that is iterative requires refinement and revision based on feedback, testing, or reflection throughout the process. This may require revisiting earlier phases of the process. CRD - 2.F.1 - The design of a program incorporates investigation to determine its requirements. CRD - 2.F.2 - Investigation in a development process is useful for understanding and identifying the program constraints, as well as the concerns and interests of the people who will use the program. CRD - 2.F.3 - Some ways investigation can be performed are as follows: . Collecting data through surveys User testing Interviews CRD - 2.F.4 - Program requirements describe how a program functions and may include a description of user interactions that a program must provide. CRD - 2.F.5 - A program’s specification defines the requirements for the program. CRD - 2.F.6 - In a development process, the design phase outlines how to accomplish a given program specification. CRD - 2.F.7 - The design phase of a program may include: . Brainstorming Planning and storyboarding Organizing the program into modules and functional components Creation of diagrams that represent the layouts of the user interface Development of a testing strategy for the program .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/11/CB3.html",
            "relUrl": "/week%207/2022/10/11/CB3.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Notes from College Board 1.2",
            "content": "| 1.1 Collaboration | 1.2 Program Function and Purpose | 1.3 Program Design and Development | 1.4 Identifying and Correcting Errors | . Notes from College Board 1.2 . Video Notes Computer programs accept input in a variety of different forms (tacile aka touch, audio, visual, text). Programs are mostly event-driven –&gt; events (mouse clicks, screen taps/swipes, physical button clicks, eyboard entries, audio keywords/phrases) are triggered by actions, which sends input to the program. Input affects output of a program. Outputs can be visual, audio,touch/feel(vibrations), text, etc. A program (aka software) is a collection of statements. A statement is a single command, a group of statements is a code segment. To describe a code segment, first state what it does, and then include how it does it. . Learning Objectives CRD - 2.A - Describe the purpose of a computing innovation. CRD - 2.A.1 - The purpose of computing innovations is to solve problems or to pursue interests through creative expression. CRD - 2.A.2 - An understanding of the purpose of a computing innovation provides developers with an improved abiltiy to develop that essential knowledge on. . Notes Different innovations are contained under different categories of innovations . Program inputs are pecies of data that are sent to computers for processing and interpretation. The computer will then perform operations and manipulate teh data in order to produce a desirable. Inputs can either come from the user themselves, or from another program. . Every event in a program is associated with an action that supplies an input to the program. . Event Driven Programming: Program segments and code fragments are executed based on events that trigger specific control flow structures rather an a smooth, sequential flow. . A program is a collection of software statements that collectively serves a specific use and performs a certain task. . The program works for a variety of inputs and situations. (Think of it like a function) .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/11/CB2.html",
            "relUrl": "/week%207/2022/10/11/CB2.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Notes from College Board 1.1",
            "content": "| 1.1 Collaboration | 1.2 Program Function and Purpose | 1.3 Program Design and Development | 1.4 Identifying and Correcting Errors | . Notes from College Board 1.1 . Learning Objectives CRD - 1.A Explain how innovations are improved through collaboration. CRD - 1.A.1 A computing innovation includes a program as an integral part of its function. CRD - 1.A.2 A computer innovation can be physica (i.e., self-driving car), non physical computing software (e.g., picture editing software), or a nonphysical computng concept (e.g., e-commerce). CRD - 1.A.3 Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. CRD - 1.A.4 Collaboration that incudes diverse perspectives helps avoid bias in the development of computing innovations CRD - 1.C Demonstrate effective interpersonal skills during collaboration. CRD - 1.C.1 Effective collaborative teams practice interpersonal skills, including, but not limited to: Communication, Consesus Building, Conflict Resolution, Negotiation . Notes Different people in different departments work on different subjects and interests. . A program always start up with an idea, purpose and plan. A program must have requirements of the that meet the necessary constraints it must meet. . Developers are able to practice better interpersonal skills in a diverse team. . Pair Programming: One programmer types the code, while the other reviews each line of code. . Think-Pair-Share: Students think through a problem alone, pair with a partner to share ideas, and then share results with the class . This is the beginning of planning for the Create Performance Task assignment. More will be added to this post as weeks go by until it is time to code. . What I know that could help with the project: . How to make a quiz How to create list How to use dictionaries How to explain the code I have made What I need for the project: . Learn how to use different functions Learn how to display variables correctly Look at examples of bad, good, and great Performance Task Projects Look over the college board requirements .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/11/CB1.html",
            "relUrl": "/week%207/2022/10/11/CB1.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "API Test HACKS",
            "content": "| Javascript Kernel Usage | Using HTML fragments and JavaScript data to build a table | API for Final Project and further API Implementation and Testing | . . Using the Random number API that will help for the Minesweeper Project . This random number API can be used for creating mine coordinates in the minesweeper final project that our group is creating | Link for Instructions on how to use the API | API on Gitub | . import requests url = &quot;http://www.randomnumberapi.com/api/v1.0/random?min=0&amp;max=200&amp;count=20&quot; response = requests.request(&quot;GET&quot;, url) print(response.text) . [104, 41, 56, 28, 1, 43, 59, 113, 100, 191, 31, 164, 49, 155, 94, 108, 184, 127, 58, 99] . Using two APIs and formatters to display location and weather information about a particular location . First API generates the latitude and longitidude of a particular location (from user input) | The latitude and longitude from this API is used in the second API to provide location and weather data | This is all in JSON format which can be &quot;prettified&quot; using JSON formatters&quot; | . import requests, json location = input(&quot;Enter a Zip Code (Ex: 92127)&quot;) print(&quot;You are evaluating location and weather data for Zip Code: &quot; + location) url = &quot;https://us-zip-code-information.p.rapidapi.com/&quot; querystring = {&quot;zipcode&quot;:str(location)} headers = { &quot;X-RapidAPI-Key&quot;: &quot;6cef6d9f81mshf9a1793ed8d336ap1c4e09jsn658eb44a2a5f&quot;, &quot;X-RapidAPI-Host&quot;: &quot;us-zip-code-information.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) locations = json.loads(response.text) lat = &quot;&quot; lon = &quot;&quot; for location in locations: lat = location[&quot;Latitude&quot;] lon = location[&quot;Longitude&quot;] url = &quot;https://weatherbit-v1-mashape.p.rapidapi.com/current&quot; querystring = {&quot;lon&quot;:lon,&quot;lat&quot;:lat, &quot;units&quot;: &#39;imperial&#39;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;6cef6d9f81mshf9a1793ed8d336ap1c4e09jsn658eb44a2a5f&quot;, &quot;X-RapidAPI-Host&quot;: &quot;weatherbit-v1-mashape.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) json_object = json.loads(response.text) json_formatted_str = json.dumps(json_object, indent=2) print(json_formatted_str) . You are evaluating location and weather data for Zip Code: 92126 { &#34;count&#34;: 1, &#34;data&#34;: [ { &#34;app_temp&#34;: 73, &#34;aqi&#34;: 39, &#34;city_name&#34;: &#34;Mira Mesa&#34;, &#34;clouds&#34;: 62, &#34;country_code&#34;: &#34;US&#34;, &#34;datetime&#34;: &#34;2022-10-11:20&#34;, &#34;dewpt&#34;: 60.5, &#34;dhi&#34;: 114.98, &#34;dni&#34;: 899.17, &#34;elev_angle&#34;: 49.29, &#34;ghi&#34;: 789.23, &#34;gust&#34;: 10.8, &#34;h_angle&#34;: 15, &#34;lat&#34;: 32.911, &#34;lon&#34;: -117.1448, &#34;ob_time&#34;: &#34;2022-10-11 19:52&#34;, &#34;pod&#34;: &#34;d&#34;, &#34;precip&#34;: 0, &#34;pres&#34;: 999, &#34;rh&#34;: 64, &#34;slp&#34;: 1015.23035, &#34;snow&#34;: 0, &#34;solar_rad&#34;: 664.9, &#34;sources&#34;: [ &#34;rtma&#34; ], &#34;state_code&#34;: &#34;CA&#34;, &#34;station&#34;: &#34;E1483&#34;, &#34;sunrise&#34;: &#34;13:50&#34;, &#34;sunset&#34;: &#34;01:20&#34;, &#34;temp&#34;: 73, &#34;timezone&#34;: &#34;America/Los_Angeles&#34;, &#34;ts&#34;: 1665517946, &#34;uv&#34;: 3.7561529, &#34;vis&#34;: 9.9, &#34;weather&#34;: { &#34;icon&#34;: &#34;c02d&#34;, &#34;description&#34;: &#34;Scattered clouds&#34;, &#34;code&#34;: 802 }, &#34;wind_cdir&#34;: &#34;WNW&#34;, &#34;wind_cdir_full&#34;: &#34;west-northwest&#34;, &#34;wind_dir&#34;: 282, &#34;wind_spd&#34;: 6.1 } ] } . The Kernel crashed while executing code in the the current cell or a previous cell. Please review the code in the cell(s) to identify a possible cause of the failure. Click &lt;a href=&#39;https://aka.ms/vscodeJupyterKernelCrash&#39;&gt;here&lt;/a&gt; for more info. View Jupyter &lt;a href=&#39;command:jupyter.viewOutput&#39;&gt;log&lt;/a&gt; for further details. .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/10/apitest.html",
            "relUrl": "/week%207/2022/10/10/apitest.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;Too many requests&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference APIs using a Web Interface. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI Frontend. JavaScript frontend code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | Backend. &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; Making a Jokes API Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; | . | .",
            "url": "https://stg-7.github.io/FastPagesSTG/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Correcting Errors Challenge (Burger, Fries, and Drink)",
            "content": "First code prints the menu to console using iteration of the menu dictionary | User input is prompted for items that can be selected in the menu | Users can add as many items from the menu as they can, included duplicates | Background processes occurs as users at these items, totaling up the price as each item is added | Once the user click escape, the program terminates and the total price is listed | menu = {&quot;Burger&quot;: 3.99, &quot;Fries&quot;: 1.99, &quot;Drink&quot;: 0.99} total = 0 print(&quot;Full Menu&quot;) for k,v in menu.items(): print(k + &quot; : $&quot; + str(v)) order = True while order: item = input(&quot;Please select your items from the menu, click escape when you are done&quot;) if item in menu.keys(): total+= menu[item] else: order = False print(&quot;Total Cost : $&quot; + str(total)) print(&quot;Have a nice day!&quot;) . Full Menu Burger : $3.99 Fries : $1.99 Drink : $0.99 Total Cost : $5.98 Have a nice day! .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%207/2022/10/03/AP-error_testing.html",
            "relUrl": "/week%207/2022/10/03/AP-error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Scrum Roles",
            "content": "Scrum Roles . Our group decided on the following roles: . Shaurya Goel: Scrum Master | Evan Apari: DevOps | Alex Lu: Backend | Haseeb Beg and Tirth Thakar: Frontend | . As scrum master, I will make sure my team is always on task and that we have our review tickets ready on time.Also I will talk on the behalf of my team to Mr. Mortensen so that all questions are answered and that the content is understood. . Alex will be the backend programmer in our group as he is very advanced in object oriented programming. I will also be able to help Alex Lu out as I have understanding in python and other OOP languages. . Tirth and Haseeb will collaborate together as frontend programmers. They have already started collaborating and using frontened tools on our final project and I can see this working out in the near future. . Evan will be our DevOps manager, he did well with the AWS deployment and I can see him being productive in the future. . Agile Methodology Picture . .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%205/2022/09/29/scrum.html",
            "relUrl": "/week%205/2022/09/29/scrum.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "AP Prep Multiple Choice",
            "content": "All overall College Board MCQs (100%) . . Problems while doing the College Board MCQs . Documentation for procedure with complicated algorithms/loops/lists | . . Testing cases while traversing through a list | . . Notes from College Board Videos . | 1.1 Collaboration | 1.2 Program Function and Purpose | 1.3 Program Design and Development | 1.4 Identifying and Correcting Errors | .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%206/2022/09/27/mcq.html",
            "relUrl": "/week%206/2022/09/27/mcq.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Using HTML fragments and JavaScript data to build a table",
            "content": "| Javascript Kernel Usage | Using HTML fragments and JavaScript data to build a table | API for Final Project and further API Implementation and Testing | . . Defining a dictionary with data . var dict = { ScrumLeader: &quot;Shaurya Goel&quot;, BackendDeveloper: &quot;Alex Lu&quot;, FrontendDeveloper: &quot;Haseeb Beg&quot;, FrontendDeveloper2: &quot;Tirth Thakar&quot;, DevOps: &quot;Evan Apari&quot;, }; . Pritning out Data in an HTML Table . function createTable(data){ var table = &quot;&lt;table&gt;&lt;tr&gt;&lt;th&gt;Role&lt;/th&gt;&lt;th&gt;Member&lt;/th&gt;&lt;/tr&gt;&quot; var keys = Object.keys(data); for(var index in keys){ const key = keys[index]; const value = dict[key]; table += &quot;&lt;tr&gt;&lt;td&gt;&quot;+key+&quot;&lt;/td&gt;&lt;td&gt;&quot;+value+&quot;&lt;/td&gt;&lt;/tr&gt;&quot;; } table += &quot;&lt;/table&gt;&quot;; return table; } $$.html(createTable(dict)); . RoleMember . ScrumLeader | Shaurya Goel | . BackendDeveloper | Alex Lu | . FrontendDeveloper | Haseeb Beg | . FrontendDeveloper2 | Tirth Thakar | . DevOps | Evan Apari | .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%205/2022/09/26/JSJN2.html",
            "relUrl": "/week%205/2022/09/26/JSJN2.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Usage of Jupyter JavaScript kernel",
            "content": "| Javascript Kernel Usage | Using HTML fragments and JavaScript data to build a table | API for Final Project and further API Implementation and Testing | . . Usage of Jupyter JavaScript Kernel . Printing &quot;Hello World&quot; . console.log(&quot;Hello World&quot;) . Hello World . Printing &quot;Hello World&quot; with Encapsulation . msg = &quot;Hello World&quot; console.log(msg) . Hello World . Function that multiplies two numbers . function myFunction(a, b) { return a * b; } myFunction(659,8999956) . 5930971004 . Function that checks if a number is even or odd . function NumType(x){ if (x % 2 == 0) { console.log(x + &quot; is an even number&quot;); } else { console.log(x + &quot; is an odd number&quot;); } } NumType(35) . 35 is an odd number . JavaScript Data that will be used for the HTML Post . var dict = { ScrumLeader: &quot;Shaurya Goel&quot;, BackendDeveloper: &quot;Alex Lu&quot;, FrontendDeveloper: &quot;Haseeb Beg&quot;, FrontendDeveloper2: &quot;Tirth Thakar&quot;, DevOps: &quot;Evan Apari&quot;, }; console.log(dict) . { ScrumLeader: &#39;Shaurya Goel&#39;, BackendDeveloper: &#39;Alex Lu&#39;, FrontendDeveloper: &#39;Haseeb Beg&#39;, FrontendDeveloper2: &#39;Tirth Thakar&#39;, DevOps: &#39;Evan Apari&#39; } .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%205/2022/09/24/OK.html",
            "relUrl": "/week%205/2022/09/24/OK.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Python Lists and Dictionaries HACKS",
            "content": "",
            "url": "https://stg-7.github.io/FastPagesSTG/week%205/2022/09/24/JSJN.html",
            "relUrl": "/week%205/2022/09/24/JSJN.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "AppLab HACKS",
            "content": "AppLab Planning/Blogging . Planning: . 3 Question quiz on Python syntax | Final score and percentage is outputted at the end | Design should look neat and well connected | . Blogging: At first I used the code tab to implement buttons and position of the bottom and then use on-event code for each of those buttons. After the first set of questions I realized that this is not efficient and started using the design tab to place buttons and other features on the screens. From there I used the code tab and coded in javascript to use these buttons and labels. . AppLab Creation . Quiz-AppLab . Extra features in the program: . Explanations for right and wrong answers for every question in the quiz | Final Percentage and accuracy of each question is posted at the end | Use of “if” conditional statements and JavaScript code to further enhance the App | . Relating AppLab to College Board Performance Task . Purpose: . The purpose of this program is to test the user’s understanding in Python syntax. . Functionality: . This program consists of 15 different screens and tests users on 3 different questions relating to Python. It starts with a home screen that allows users to click a button that takes them to the first question and different answer options. Each of those options when clicked on will take the user to a seperate screen that tells whether the answer is correct/incorrect and gives an explanation. On the bottom of these screens are a button that can take you to next question. After the final question is answered there will also be a button on the bottom of the “explanation” screens that will take you to the final page. This page outputs which questions you got correct and the final percenage. . Data Abstraction: . Each of the answer buttons in the questions page had their own functionality abstracted in one method. The explanations for right/wrong, the button to move on to the next page, and the backend process of calculating correct/incorrect was all done in one method for each question. To further improve this code I can further abstract the data by adding a list of dictionaries that contain key-value pairs for questions and answers. . Managing Complexity: . In order to manage the complexity of this quiz, I was able to type many comments and ordered my code in a readable fashion in order to ensure that the code is very easy to follow. The comments allow us to communicate what we are doing with each function and what the purpose of the variables are. And the repeated use of the functions allow us to easily call back to a known function that we make and it communicated the purpose of the funciton without having the reader have to understand the code. . Procedural Abstraction: . The first function allows the user to start the quiz, after that there is a series of functions that display a question and answer buttons that have different outcomes for every different answer button. At every new page that was called from the answer button there is a function that allows the user to go to the next question and then finally the last qusetion. All along backend processes and calculations occur calculating which question the user got correct and the final percentage that is displayed in the last page/ . Algorithm Implementation: . I used similar algorithms for every answer button in the questions pages but each screen change for question and the final page had different algoritmn implementation. To further improve this code, we can reduce repition for the answer buttons algorithms. . Testing: . I tested this quiz multiple times, both in the process of creating the quiz and even after I fully programmed it. I tested every screen’s output and tested the validity of the final percentage in the last screen. .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%203/2022/09/11/AppLabBlog.html",
            "relUrl": "/week%203/2022/09/11/AppLabBlog.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Python Lists and Dictionaries HACKS",
            "content": "Defining a List of Dictionaries called &quot;InfoDB&quot; . InfoDB = [] # defining people as dictionaries that contain key-value pairs Shaurya = { # these records are of string type &quot;FirstName&quot;: &quot;Shaurya&quot;, &quot;LastName&quot;: &quot;Goel&quot;, &quot;DOB&quot;: &quot;October 29, 2007&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;shauryaggamer@gmail.com&quot;, # these records are of list type &quot;Owns Cars&quot;: [&quot;None&quot;], &quot;Owns Devices&quot;: [&quot;iPhone&quot;, &quot;Gaming laptop&quot;], &quot;Hobbies&quot;: [&quot;Football&quot;, &quot;Soccer&quot;, &quot;Video Games&quot;] } Tom = { &quot;FirstName&quot;: &quot;Tom&quot;, &quot;LastName&quot;: &quot;Brady&quot;, &quot;DOB&quot;: &quot;August 3, 1977&quot;, &quot;Residence&quot;: &quot;Tampa Bay&quot;, &quot;Email&quot;: &quot;info@brandbrady.com &quot;, &quot;Owns Cars&quot;: [&quot;2017 Aston Martin DB11&quot;, &quot;2015 Rolls Royce Ghost&quot;, &quot;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&quot;, &quot;2015 Ferrari M458-T&quot;, &quot;2009 Audi R8&quot;], &quot;Hobbies&quot;: [&quot;Football&quot;, &quot;Cars&quot;] } Cristiano = { &quot;FirstName&quot;: &quot;Cristiano&quot;, &quot;LastName&quot;: &quot;Ronaldo&quot;, &quot;DOB&quot;: &quot;February 5, 1985&quot;, &quot;Residence&quot;: &quot;Portugal&quot;, &quot;Email&quot;: &quot;NA&quot;, &quot;Owns Cars&quot;: [&quot;Rolls-Royce Cullinan&quot;, &quot;Ferrari F12 TDF&quot;, &quot;Lamborghini Aventador&quot;, &quot;Bugatti Centodieci&quot;, &quot;Maserati GranCabrio&quot;, &quot;Porsche 911 turbo&quot;, &quot;Ferrari F430&quot; ] , &quot;Hobbies&quot;: [&quot;Soccer&quot;, &quot;Cars&quot;] } # adding the dictionaries to the overall list, creating the whole database InfoDB.append(Shaurya) InfoDB.append(Tom) InfoDB.append(Cristiano) . def getValue(dic, key): if (key in dic): return str(dic[key]) def showValue(dic, key): if (key in dic): print(key + &quot; : &quot; + getValue(dic, key)) . Iteration through InfDB Using specic keys . for x in InfoDB: print() showValue(x,&quot;FirstName&quot;) showValue(x,&quot;LastName&quot;) showValue(x,&quot;DOB&quot;) showValue(x,&quot;Email&quot;) showValue(x,&quot;Owns Cars&quot;) showValue(x,&quot;Owns Devices&quot;) showValue(x,&quot;Hobbies&quot;) . FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] . Iteration through InfoDB using &quot;For Loop&quot; . for x in InfoDB: print() # iteratating through every key in the dictionary for key in x: print(str(key) + &quot; : &quot; + str(x[key])) . FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Residence : San Diego Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Residence : Tampa Bay Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Residence : Portugal Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] . Iteration through InfoDB using &quot;For Loop&quot; (with Indexes) . # len(InfoDB) returns length of InfoDB as an integer # range command returns a sequence of numbers, starting from 0 by default and ends (in this case) with the length of InfoDB for x in range(len(InfoDB)): print() # getting the dictionary stored at index position x, assigned to variable &quot;item&quot; item = InfoDB[x] # printing out every key and value in the dictionary using y as the index for y in range(len(item)): print(list(item)[y] +&quot; : &quot; + str(list(item.values())[y])) . FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Residence : San Diego Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Residence : Tampa Bay Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Residence : Portugal Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] . Iterating through InfoDB using &quot;While Loop&quot; . listnumber = 0 # setting condition that while listnumber is less than the length of InfoDB run this code: while listnumber &lt; len(InfoDB) : # assigning dictionary to the variable DB DB = InfoDB[listnumber] print() # printing out all content in InfoDB for key in DB: print(str(key) + &quot; : &quot; + str(DB[key])) # adding and reassigning listnumber plus 1 so that code can iterate through the whole list listnumber += 1 . FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Residence : San Diego Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Residence : Tampa Bay Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Residence : Portugal Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] . Iteration through InfoDB Using &quot;Recursion&quot; . def recursive_loop(n): # setting an if statement that &quot;if n is less than the length of InfoDB, follow this code:&quot; if n &lt; len(InfoDB): # assigning dictionary to the variable DB DB = InfoDB[n] # printing out all the keys and values in the DB dictionary print() for key in DB: print(str(key) + &quot; : &quot; + str(DB[key])) # recursion occurs here, the function is called again but n is added and reassigned to a value one greater recursive_loop(n + 1) recursive_loop(0) . FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Residence : San Diego Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Residence : Tampa Bay Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Residence : Portugal Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] . Outputing data in InfoDB in Reverse Order . listnumber = 0 # setting condition that while listnumber is less than the length of InfoDB run this code: while listnumber &lt; len(InfoDB) : # Assigning a dictionary to the variable DB DB = InfoDB[listnumber] print() for key in reversed(list(DB.keys())): print(str(key) + &quot; : &quot; + str(DB[key])) # adding and reassigning keynumber and valuenumber so that the code will go on until all of the content in InfoDB is printed out listnumber += 1 . Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Owns Cars : [&#39;None&#39;] Email : shauryaggamer@gmail.com Residence : San Diego DOB : October 29, 2007 LastName : Goel FirstName : Shaurya Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Email : info@brandbrady.com Residence : Tampa Bay DOB : August 3, 1977 LastName : Brady FirstName : Tom Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Email : NA Residence : Portugal DOB : February 5, 1985 LastName : Ronaldo FirstName : Cristiano . Adding to InfoDB using User Input . def AddToDB(x, key): print (&quot;Input the &quot; + key + &quot; for the Person&quot;) value = input() x[key] = value def AddToDBList(x, key): valueList = [] while True : print (&quot;Input the &quot; + key + &quot; for the Person&quot;) value = input() valueList.append(value) print(&quot;Do you want to add more values for &quot; + key + &quot;. Enter &#39;Y&#39; for yes and &#39;N&#39; for no.&quot;) check = input() if check == &quot;N&quot;: break x[key] = valueList # create a new empty dictionary newdict = {} print(&quot;Add a person&#39;s first name to the DataBase&quot;) # add first name to dictionary AddToDB(newdict, &quot;FirstName&quot;) # add last name to dictionary AddToDB(newdict, &quot;LastName&quot;) # add DOB to dictionary AddToDB(newdict, &quot;DOB&quot;) # add Email to dictionary AddToDB(newdict, &quot;Email&quot;) # add Owns Cars list to dictionary AddToDBList(newdict, &quot;Owns Cars&quot;) # add Owns Devices list to dictionary AddToDBList(newdict, &quot;Owns Devices&quot;) # add Hobbies list to dictionary AddToDBList(newdict, &quot;Hobbies&quot;) InfoDB.append(newdict) print(&quot;You added &quot; + newdict[&quot;FirstName&quot;] + &quot; to the database&quot;) for x in InfoDB: print(&quot;======================&quot;) showValue(x,&quot;FirstName&quot;) showValue(x,&quot;LastName&quot;) showValue(x,&quot;DOB&quot;) showValue(x,&quot;Email&quot;) showValue(x,&quot;Owns Cars&quot;) showValue(x,&quot;Owns Devices&quot;) showValue(x,&quot;Hobbies&quot;) . Add a person&#39;s first name to the DataBase Input the FirstName for the Person Input the LastName for the Person Input the DOB for the Person Input the Email for the Person Input the Owns Cars for the Person Do you want to add more values for Owns Cars. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Cars for the Person Do you want to add more values for Owns Cars. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Cars for the Person Do you want to add more values for Owns Cars. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Cars for the Person Do you want to add more values for Owns Cars. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Devices for the Person Do you want to add more values for Owns Devices. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Devices for the Person Do you want to add more values for Owns Devices. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Owns Devices for the Person Do you want to add more values for Owns Devices. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Hobbies for the Person Do you want to add more values for Hobbies. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. Input the Hobbies for the Person Do you want to add more values for Hobbies. Enter &#39;Y&#39; for yes and &#39;N&#39; for no. You added Lebron to the database ====================== FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] ====================== FirstName : Tom LastName : Brady DOB : August 3, 1977 Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] ====================== FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] ====================== FirstName : Lebron LastName : James DOB : December 30, 1984 Email : NA Owns Cars : [&#39;Ferrari F430 Spyder&#39;, &#39;Porsche 918 Spyder&#39;, &#39;Lamborghini Aventador Roadster&#39;, &#39;Bentley Continental GT&#39;] Owns Devices : [&#39;Iphone&#39;, &#39;Airpods&#39;, &#39;Tablet&#39;] Hobbies : [&#39;Basketball&#39;, &#39;Cars&#39;] . Removing from InfoDB using User Input . removename = &quot;&quot; def RemovToDB(): print(&quot;Remove a person from the database:&quot;) removename = input() for x in InfoDB: if &quot;FirstName&quot; in x: if getValue(x, &quot;FirstName&quot;) == str(removename): InfoDB.remove(x) print(&quot;You removed &quot; + removename + &quot; from the databse&quot;) RemovToDB() print(&quot;Here is the updated InfoDB:&quot;) for x in InfoDB: print() showValue(x,&quot;FirstName&quot;) showValue(x,&quot;LastName&quot;) showValue(x,&quot;DOB&quot;) showValue(x,&quot;Email&quot;) showValue(x,&quot;Owns Cars&quot;) showValue(x,&quot;Owns Devices&quot;) showValue(x,&quot;Hobbies&quot;) . Remove a person from the database: You removed Lebron from the databse Here is the updated InfoDB: FirstName : Shaurya LastName : Goel DOB : October 29, 2007 Email : shauryaggamer@gmail.com Owns Cars : [&#39;None&#39;] Owns Devices : [&#39;iPhone&#39;, &#39;Gaming laptop&#39;] Hobbies : [&#39;Football&#39;, &#39;Soccer&#39;, &#39;Video Games&#39;] FirstName : Tom LastName : Brady DOB : August 3, 1977 Email : info@brandbrady.com Owns Cars : [&#39;2017 Aston Martin DB11&#39;, &#39;2015 Rolls Royce Ghost&#39;, &#39;2018 Limited Edition TB12 Aston Martin Vanquish S Volante&#39;, &#39;2015 Ferrari M458-T&#39;, &#39;2009 Audi R8&#39;] Hobbies : [&#39;Football&#39;, &#39;Cars&#39;] FirstName : Cristiano LastName : Ronaldo DOB : February 5, 1985 Email : NA Owns Cars : [&#39;Rolls-Royce Cullinan&#39;, &#39;Ferrari F12 TDF&#39;, &#39;Lamborghini Aventador&#39;, &#39;Bugatti Centodieci&#39;, &#39;Maserati GranCabrio&#39;, &#39;Porsche 911 turbo&#39;, &#39;Ferrari F430&#39;] Hobbies : [&#39;Soccer&#39;, &#39;Cars&#39;] .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%202/2022/09/01/PythonHACKS.html",
            "relUrl": "/week%202/2022/09/01/PythonHACKS.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "HTML Hacks",
            "content": "Hacks for HTML . Changing remote theme temporarily . Changed value for key remote_theme: . . Change to fastpages site: . . Main problems when switching the theme: . Files under the the _pages no longer appear, this includes: search | tags | . | .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%202/2022/08/31/HTMLHacks.html",
            "relUrl": "/week%202/2022/08/31/HTMLHacks.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Alumini Panel Extra Credit Assignment",
            "content": "Important Insights and Takeaways from the event . Background Info on Alumini . Some of the aulumini graduated to UCs | Most of them are majoring or have some sort of knowledge and background in Computer Science | . Biggest Challenges in Computer Science . Staying motivated You may get demotivated because of problems and setbacks during the learning process | You also may get demotivated because of people being ahead of you | . | Getting started, coding is very difficult | . . General Tips in Computer Science . Focus on your own path | Ignore clashing egos with colleagues and peers | Have a better mindset to learn instead of just trying to get stuff down (Taking shortcuts does not help!) | Logic/Algorithmic problemsolving is more important than knowledge of syntax | Logical thinking background helped Alumini with Coding and solving problems | . Group Based Work in College . There are a lot of group based assignments in college | Managing your group is very important to your success | Some of the alumini got used for doing too much group work, be mindful on how you split your work amongst colleagues and peers | . Are there any PBL scenarios in college computer science classes? . In college there are 2 of them, 1 in senior year | In college there are some project based learning classes and some theory based classes | There are a lot of PBL exams which are fixed for computer science courses | . Applying for Computer Science even if you are not majoring in it . Computer science can be used for optimization in other fields Mechanical Engineering | Cognitive Science | Aerospace | 3D Printing | Statistics (Code in R) | . | Computer science can also help with high level math | Programming is in almost every field. | . Internships . Getting internships and talking to professors will help get better jobs | . Tips for getting internships: . Have an outstanding resume that seperates you from everyone else Linkedin, Portfolio websites | . | Know when to apply Dates to apply, deadlines, etc. | . | Networking other people/engineers that are currently in the job | . | . Alumini personal experience in Internships: . Alumuni did Internships in Northrop Grumman | Alumini did internships in a company doing APIs and web development | . . Additonal Information on Internships and Future Jobs . Doing 2 or 3 personal projects will help out with applying for internships and jobs | Alumini did a lot of work in data application | Alumini joined a club called Trident A in UCSD | .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%201/2022/08/29/AluminiPanelNotes.html",
            "relUrl": "/week%201/2022/08/29/AluminiPanelNotes.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Shaurya Goel's BASH Tutorial Hacks",
            "content": "My Hacks . Workspace Setup: Automate cloning git repositories into my working directory | Automate fetching latest changes from github to my working directory | . | Automate checking tools are installed :sunglasses: Java | Python | Bash | . | Autoname verification using Anaconda - work in progress... :sunglasses: | . Workspace setup . Automate cloning the local workspace with projects from github | Automate updating the local workspace with projects from github Running this will ensure I have latest changes | . echo &quot;Setting up local folders and checking out repository&quot; git config --global user.email shauryaggamer@gmail.com git config --global user.name STG-7 # Variable section export home_dir=/home/shaurya # this is only needed since there is an issue with my home dir right now export workspace_dir=/home/shaurya/vscode # setting project directory to /home/shaurya export apcsp=$workspace_dir/APCSP # Clone APCSP project export apcsp_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # APCSP URL export myproj=$workspace_dir/FastPagesSTG # Clone my project export myproj_repo=&quot;https://github.com/STG-7/FastPagesSTG.git&quot; # My project URL cd $home_dir # start in home directory # Conditional block to make a project directory if [ ! -d $workspace_dir ] then echo &quot;Directory $workspace_dir does not exists... Setting up empty workspace directory $workspace_dir&quot; mkdir -p $workspace_dir fi echo &quot;Directory $workspace_dir exists.&quot; # Conditional block to git clone a apcsp from apcsp_repo if [ ! -d $apcsp ] then echo &quot;Project $apcsp does not exists... cloning $apcsp_repo&quot; cd $workspace_dir git clone $apcsp_repo echo &quot;Project $apcsp cloned successfully.&quot; cd $home_dir else cd $apcsp git fetch origin echo &quot;Project $apcsp updated successfully.&quot; cd $workspace_dir fi # Conditional block to git clone a myproj from myproj_repo if [ ! -d $myproj ] then echo &quot;Project $myproj does not exists... cloning $myproj_repo&quot; cd $workspace_dir git clone $myproj_repo echo &quot;Project $myproj cloned successfully.&quot; cd $home_dir else cd $myproj git fetch origin echo &quot;Project $myproj updated successfully.&quot; cd $workspace_dir fi . Setting up local folders and checking out repository Directory /home/shaurya/vscode exists. Project /home/shaurya/vscode/APCSP updated successfully. Project /home/shaurya/vscode/FastPagesSTG updated successfully. . Environment Validation . Automate checking if I have following kernels Javascript | Python3 | Bash | . | . js=0 p3=0 ba=0 jupyter kernelspec list | awk &#39;{print $1}&#39; | while read line; do if [ &quot;$line&quot; = &quot;javascript&quot; ] then js=1 elif [ &quot;$line&quot; = &quot;python3&quot; ] then p3=1 elif [ &quot;$line&quot; = &quot;bash&quot; ] then ba=1 fi done if [ js == 0 ] then echo &quot;Javascript Kernel Not Found&quot; else echo &quot;Javascript Kernel Exists&quot; fi if [ p3 == 0 ] then echo &quot;Python Kernel Not Found&quot; else echo &quot;Python Kernel Exists&quot; fi if [ ba == 0 ] then echo &quot;Bash Kernel Not Found&quot; else echo &quot;Bash Kernel Exists&quot; fi . Javascript Kernel Exists Python Kernel Exists Bash Kernel Exists . Verifying tools using conda . Automate checking if I have following kernels Javascript | Python3 | Bash | Ipykernel | . | . package_list=/tmp/packagelist.txt if [[ ! -f $package_list ]] then conda list -n base &gt; $package_list fi python_ver=`awk &#39;$1 == &quot;python&quot; { print $2 }&#39; /tmp/packagelist.txt` if [ $python_ver == &quot;&quot; ] then echo &quot;Python not installed&quot; else echo &quot;Python installed with version $python_ver&quot; fi ipykernel_ver=`awk &#39;$1 == &quot;ipykernel&quot; { print $2 }&#39; /tmp/packagelist.txt` if [ $ipykernel_ver == &quot;&quot; ] then echo &quot;ipykernel not installed&quot; else echo &quot;ipykernel installed with version $ipykernel_ver&quot; fi conda_ver=`awk &#39;$1 == &quot;conda&quot; { print $2 }&#39; /tmp/packagelist.txt` if [ $conda_ver == &quot;&quot; ] then echo &quot;conda not installed&quot; else echo &quot;conda installed with version $conda_ver&quot; fi bash_kernel_ver=`awk &#39;$1 == &quot;bash-kernel&quot; { print $2 }&#39; /tmp/packagelist.txt` if [ $bash_kernel_ver == &quot;&quot; ] then echo &quot;bash-kernel not installed&quot; else echo &quot;bash-kernel installed with version $bash_kernel_ver&quot; fi jupyter_ver=`awk &#39;$1 == &quot;jupyter&quot; { print $2 }&#39; /tmp/packagelist.txt` if [ $jupyter_ver == &quot;&quot; ] then echo &quot;jupyter not installed&quot; else echo &quot;jupyter installed with version $jupyter_ver&quot; fi . Python installed with version 3.9.12 ipykernel installed with version 6.9.1 conda installed with version 4.13.0 bash-kernel installed with version 0.7.2 jupyter installed with version 1.0.0 .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%201/2022/08/24/Shaurya-bash_tutorial.html",
            "relUrl": "/week%201/2022/08/24/Shaurya-bash_tutorial.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Quiz made through Python Code",
            "content": "Anatomy of my Code: . I definded a dictionary and created key (question) and value (answer) pairs to avoid redundance in code. | I then defined a for loop and an if statement to iterate through the keys (questions) and determine if they had the correct value (answer). | Afterwards, I used mathematical operations and a formatter to display the percentage of the grade. | . import getpass, sys #defining a function that takes in a parameter and returns user input def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg # create a dictionary (key value pairs) of questions and answers, this way I can add as many questions as I want without duplicating the code quesstionsAndAsnwers = { &quot;What command is used to include other functions that were previously developed?&quot;: &quot;import&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot;: &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;: &quot;expression&quot;, &quot;What command is used to define a function?&quot;: &quot;def&quot;, &quot;What symbol is used for String Concatenation?&quot;: &quot;+&quot; } # since the number of questions can change, the questions variable is populated with the length of the dictionary questions = len(quesstionsAndAsnwers) correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions on the key vocabulary of Python basics.&quot;) # iterate over the keys from the dictionary for key in quesstionsAndAsnwers: #pass the question (key) to the function rsp = question_with_response(key) #compare the user response with value from the dictionary (the answer) if rsp == quesstionsAndAsnwers[key]: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) + &quot;/&quot; + str(questions)) #print the percentage print(&quot;Total Percentage: &quot; + str (format(correct/questions * 100,&quot;.2f&quot;)) + &quot;%&quot;) . Hello, shaur running C: Users shaur AppData Local Microsoft WindowsApps PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0 python.exe You will be asked 5 questions on the key vocabulary of Python basics. Question: What command is used to include other functions that were previously developed? import is correct! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! Question: What command is used to define a function? def is correct! Question: What symbol is used for String Concatenation? + is correct! shaur you scored 5/5 Total Percentage: 100.00% .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%201/2022/08/24/AQuiz.html",
            "relUrl": "/week%201/2022/08/24/AQuiz.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "First Markdown Post",
            "content": "Goals for This Year: . Gain a better understanding of Python and programming languages | Learn how to work with other people and contribute to a project | Learn how to work with an IDE (vscode) and repositories (Github) | . Favorite Things: . Color: Black | Food: Sushi | Computing Device: Playstation | . .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%200/2022/08/20/FirstMD.html",
            "relUrl": "/week%200/2022/08/20/FirstMD.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "First Jupyter Notebook and Python Code",
            "content": "Printing &quot;Hello World!&quot; Using Python . print(&quot;Hello World!&quot;) . Hello World! .",
            "url": "https://stg-7.github.io/FastPagesSTG/week%200/2022/08/20/FirstJN.html",
            "relUrl": "/week%200/2022/08/20/FirstJN.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Binary Math",
            "content": "Hacks . Hack #1 . Decimal: . Hexadecimal: . Octal: . . Binary: . Hack #2 . Color code: rgb() . Hex: . Hack #3 . . Enter arbitrary base (2-36): . Base-N format: .",
            "url": "https://stg-7.github.io/FastPagesSTG/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Binary Math 2",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . . .",
            "url": "https://stg-7.github.io/FastPagesSTG/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Javascript Submenu",
          "content": "| Javascript Kernel Usage | Using HTML fragments and JavaScript data to build a table | API for Final Project and further API Implementation and Testing | .",
          "url": "https://stg-7.github.io/FastPagesSTG/submenu/",
          "relUrl": "/submenu/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hello, my name is Shaurya Goel and I am an APCSP Student in Mr. Mortensen’s Period 4 class. .",
          "url": "https://stg-7.github.io/FastPagesSTG/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://stg-7.github.io/FastPagesSTG/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}